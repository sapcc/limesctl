run:
  deadline: 2m # 1m by default
  # Invoke with -mod=readonly. This ensures that the go command is disallowed
  # from the implicit automatic updating of go.mod. Instead, it fails when any
  # changes to go.mod are needed.
  # This setting is most useful to check that go.mod does not need updates,
  # such as in a continuous integration and testing system.
  modules-download-mode: readonly

linters-settings:
  dupl:
    threshold: 100 # 150 by default
  errcheck:
    check-blank: true
    check-type-assertions: true
  forbidigo:
    forbid:
      - ^ioutil\..*$
  funlen:
    lines: 120
    statements: 60
  gofumpt:
    extra-rules: true
  goimports:
    # Put imports beginning with prefix after 3rd-party packages.
    local-prefixes: github.com/sapcc/limesctl
  govet:
    check-shadowing: true
  lll:
    line-length: 140

linters:
  # We use 'disable-all' and enable linters explicitly so that a newer version
  # will not introduce new linters unexpectedly.
  disable-all: true
  enable:
    - bodyclose
    - deadcode
    - dogsled
    - dupl
    - errcheck
    - errname
    - exportloopref
    - forbidigo
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - godot
    - gofmt
    - gofumpt
    - goimports
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ifshort
    - importas
    - ineffassign
    - lll
    - misspell
    - nakedret
    - nilerr
    - noctx
    - nolintlint
    - prealloc
    - rowserrcheck
    - staticcheck
    - structcheck
    - stylecheck
    - thelper
    - typecheck
    - unconvert
    - unparam
    - unused
    - varcheck
    - wastedassign
    - whitespace
